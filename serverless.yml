# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: allanhenderson
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: vs-translate
# serverless.yml
service: aws-translate-api

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment: ${file(./config/env.${self:provider.stage}.yml)}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - translate:TranslateText
          Resource: "*"
  httpApi:
    cors:
      allowedOrigins:
        - 'http://localhost:3000'  # In production, specify your actual frontend domain
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Api-Key
      allowedMethods:
        - POST
        - OPTIONS
      allowCredentials: true
      maxAge: 300 # Optional: cache preflight requests for 5 minutes

functions:
  translate:
    handler: src/handler.translate
    events:
      - httpApi:
          path: /translate
          method: POST
          cors: 
            allowedOrigins:
            - http://localhost:3000
            allowedHeaders:
              - Content-Type
              - Authorization
            allowedMethods:
              - GET
            allowCredentials: true
            maxAge: 6000 # In seconds
  fetchContent:
    handler: src/handlers/fetchContent.fetchContent
    events:
      - httpApi:
          path: /fetch-content
          method: POST
          cors: true
    timeout: 30
    memorySize: 256